// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://user:password123@db:5432/postgres_dbw?schema=public"
}

model Message {
  id          Int      @id @default(autoincrement())
  sender_id   Int
  receiver_id Int
  text        String
  date        DateTime
}

model User {
  id                Int    @id @default(autoincrement())
  name              String
  intra_login       String
  picture           String?
  email             String?
  is_authenticated  Boolean?
  games             Int[]
  tfa_enabled       Boolean?
}

model BlockedUser {
  id        Int @id @default(autoincrement())
  blockerId Int
  blockedId Int
}

model Channel {
  id             Int     @id @default(autoincrement())
  name           String
  picture        String?
  created_at     DateTime
  type           String
  channelOwnerId Int?
  password       String?
}

model ChannelParticipant {
  id            Int     @id @default(autoincrement())
  channel_id    Int
  user_id       Int
}

model ChannelAdmin {
  id            Int     @id @default(autoincrement())
  channel_id    Int
  user_id       Int
}

model ChannelMessage {
  id          Int      @id @default(autoincrement())
  channel_id  Int
  sender_id   Int
  text        String
  created_at  DateTime
}

model Friend {
  id               Int    @id @default(autoincrement())
  sent_user_id     Int
  received_user_id Int
  status           String
}

model BannedUser {
    id          Int      @id @default(autoincrement())
    channel_id  Int
    user_id     Int
}

model MutedUser {
    id          Int      @id @default(autoincrement())
    channel_id  Int
    user_id     Int
}

model UserStatistics {
    id          Int      @id @default(autoincrement())
    userId      Int      @unique
    wins        Int
    losses       Int
}

model GameInvitation {
    id          Int      @id @default(autoincrement())
    initiatorId   Int
    recipientId   Int
    status        String
}

model Status {
    id          Int      @id @default(autoincrement())
    userId      Int
    status      String
}

model Queue {
    id              Int      @id @default(autoincrement())
    userId   Int
}

model Game {
    id          Int      @id @default(autoincrement())
    player1     Int
    player2     Int
    score1      Int     @default(0)
    score2      Int     @default(0)
    finished    Boolean @default(false)
}